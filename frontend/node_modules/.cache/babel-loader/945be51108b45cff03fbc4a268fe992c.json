{"ast":null,"code":"// ../../../react-shim.js\nimport React from \"react\";\n\n// src/image.tsx\nimport { chakra, forwardRef as forwardRef2 } from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object) {\n  let keysToOmit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) delete clone[key];\n  }\n  return clone;\n}\n\n// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src) return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n    if (srcSet) img.srcset = srcSet;\n    if (sizes) img.sizes = sizes;\n    if (loading) img.loading = loading;\n    img.onload = event => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = error => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback) return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\n// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const {\n    htmlWidth,\n    htmlHeight,\n    alt,\n    ...rest\n  } = props;\n  return /* @__PURE__ */React.createElement(\"img\", {\n    width: htmlWidth,\n    height: htmlHeight,\n    ref,\n    alt,\n    ...rest\n  });\n});\nNativeImage.displayName = \"NativeImage\";\n\n// src/image.tsx\nvar Image2 = forwardRef2(function Image3(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...(shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"]))\n  };\n  if (showFallbackImage) {\n    if (fallback) return fallback;\n    return /* @__PURE__ */React.createElement(chakra.img, {\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc,\n      ...shared\n    });\n  }\n  return /* @__PURE__ */React.createElement(chakra.img, {\n    as: NativeImage,\n    src,\n    srcSet,\n    crossOrigin,\n    loading,\n    referrerPolicy,\n    className: \"chakra-image\",\n    ...shared\n  });\n});\nImage2.displayName = \"Image\";\n\n// src/img.tsx\nimport { chakra as chakra2, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar Img = forwardRef3((props, ref) => /* @__PURE__ */React.createElement(chakra2.img, {\n  ref,\n  as: NativeImage,\n  className: \"chakra-image\",\n  ...props\n}));\nexport { Image2 as Image, Img, shouldShowFallbackImage, useImage };","map":{"version":3,"names":["React","chakra","forwardRef","forwardRef2","omit","object","keysToOmit","clone","Object","assign","key","useSafeLayoutEffect","useCallback","useEffect","useRef","useState","useImage","props","loading","src","srcSet","onLoad","onError","crossOrigin","sizes","ignoreFallback","status","setStatus","imageRef","load","flush","img","Image","srcset","onload","event","onerror","error","current","shouldShowFallbackImage","fallbackStrategy","NativeImage","NativeImage2","ref","htmlWidth","htmlHeight","alt","rest","createElement","width","height","displayName","Image2","Image3","fallbackSrc","fallback","align","fit","referrerPolicy","providedFallback","shouldIgnoreFallbackImage","showFallbackImage","shared","objectFit","objectPosition","as","className","chakra2","forwardRef3","Img"],"sources":["/Users/davidhsieh/Code/react-flask-upload/frontend/node_modules/@chakra-ui/image/dist/index.esm.js"],"sourcesContent":["// ../../../react-shim.js\nimport React from \"react\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\n// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(\"img\", {\n    width: htmlWidth,\n    height: htmlHeight,\n    ref,\n    alt,\n    ...rest\n  });\n});\nNativeImage.displayName = \"NativeImage\";\n\n// src/image.tsx\nvar Image2 = forwardRef2(function Image3(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ React.createElement(chakra.img, {\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc,\n      ...shared\n    });\n  }\n  return /* @__PURE__ */ React.createElement(chakra.img, {\n    as: NativeImage,\n    src,\n    srcSet,\n    crossOrigin,\n    loading,\n    referrerPolicy,\n    className: \"chakra-image\",\n    ...shared\n  });\n});\nImage2.displayName = \"Image\";\n\n// src/img.tsx\nimport { chakra as chakra2, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar Img = forwardRef3((props, ref) => /* @__PURE__ */ React.createElement(chakra2.img, {\n  ref,\n  as: NativeImage,\n  className: \"chakra-image\",\n  ...props\n}));\nexport {\n  Image2 as Image,\n  Img,\n  shouldShowFallbackImage,\n  useImage\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}