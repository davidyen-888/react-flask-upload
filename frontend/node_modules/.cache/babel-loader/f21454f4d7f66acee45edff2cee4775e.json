{"ast":null,"code":"// ../../../react-shim.js\nimport React from \"react\";\n\n// src/chakra-provider.tsx\nimport { CSSReset, CSSPolyfill } from \"@chakra-ui/css-reset\";\nimport { PortalManager } from \"@chakra-ui/portal\";\nimport { ColorModeProvider, GlobalStyle, ThemeProvider } from \"@chakra-ui/system\";\nimport { EnvironmentProvider } from \"@chakra-ui/react-env\";\nvar ChakraProvider = props => {\n  const {\n    children,\n    colorModeManager,\n    portalZIndex,\n    resetCSS = true,\n    theme = {},\n    environment,\n    cssVarsRoot\n  } = props;\n  const _children = /* @__PURE__ */React.createElement(EnvironmentProvider, {\n    environment\n  }, children);\n  return /* @__PURE__ */React.createElement(ThemeProvider, {\n    theme,\n    cssVarsRoot\n  }, /* @__PURE__ */React.createElement(ColorModeProvider, {\n    colorModeManager,\n    options: theme.config\n  }, resetCSS ? /* @__PURE__ */React.createElement(CSSReset, null) : /* @__PURE__ */React.createElement(CSSPolyfill, null), /* @__PURE__ */React.createElement(GlobalStyle, null), portalZIndex ? /* @__PURE__ */React.createElement(PortalManager, {\n    zIndex: portalZIndex\n  }, _children) : _children));\n};\nexport { ChakraProvider };","map":{"version":3,"names":["React","CSSReset","CSSPolyfill","PortalManager","ColorModeProvider","GlobalStyle","ThemeProvider","EnvironmentProvider","ChakraProvider","props","children","colorModeManager","portalZIndex","resetCSS","theme","environment","cssVarsRoot","_children","createElement","options","config","zIndex"],"sources":["/Users/davidhsieh/Code/react-flask-upload/frontend/node_modules/@chakra-ui/provider/dist/index.esm.js"],"sourcesContent":["// ../../../react-shim.js\nimport React from \"react\";\n\n// src/chakra-provider.tsx\nimport { CSSReset, CSSPolyfill } from \"@chakra-ui/css-reset\";\nimport { PortalManager } from \"@chakra-ui/portal\";\nimport {\n  ColorModeProvider,\n  GlobalStyle,\n  ThemeProvider\n} from \"@chakra-ui/system\";\nimport {\n  EnvironmentProvider\n} from \"@chakra-ui/react-env\";\nvar ChakraProvider = (props) => {\n  const {\n    children,\n    colorModeManager,\n    portalZIndex,\n    resetCSS = true,\n    theme = {},\n    environment,\n    cssVarsRoot\n  } = props;\n  const _children = /* @__PURE__ */ React.createElement(EnvironmentProvider, {\n    environment\n  }, children);\n  return /* @__PURE__ */ React.createElement(ThemeProvider, {\n    theme,\n    cssVarsRoot\n  }, /* @__PURE__ */ React.createElement(ColorModeProvider, {\n    colorModeManager,\n    options: theme.config\n  }, resetCSS ? /* @__PURE__ */ React.createElement(CSSReset, null) : /* @__PURE__ */ React.createElement(CSSPolyfill, null), /* @__PURE__ */ React.createElement(GlobalStyle, null), portalZIndex ? /* @__PURE__ */ React.createElement(PortalManager, {\n    zIndex: portalZIndex\n  }, _children) : _children));\n};\nexport {\n  ChakraProvider\n};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,SAASC,QAAQ,EAAEC,WAAW,QAAQ,sBAAsB;AAC5D,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SACEC,iBAAiB,EACjBC,WAAW,EACXC,aAAa,QACR,mBAAmB;AAC1B,SACEC,mBAAmB,QACd,sBAAsB;AAC7B,IAAIC,cAAc,GAAIC,KAAK,IAAK;EAC9B,MAAM;IACJC,QAAQ;IACRC,gBAAgB;IAChBC,YAAY;IACZC,QAAQ,GAAG,IAAI;IACfC,KAAK,GAAG,CAAC,CAAC;IACVC,WAAW;IACXC;EACF,CAAC,GAAGP,KAAK;EACT,MAAMQ,SAAS,GAAG,eAAgBjB,KAAK,CAACkB,aAAa,CAACX,mBAAmB,EAAE;IACzEQ;EACF,CAAC,EAAEL,QAAQ,CAAC;EACZ,OAAO,eAAgBV,KAAK,CAACkB,aAAa,CAACZ,aAAa,EAAE;IACxDQ,KAAK;IACLE;EACF,CAAC,EAAE,eAAgBhB,KAAK,CAACkB,aAAa,CAACd,iBAAiB,EAAE;IACxDO,gBAAgB;IAChBQ,OAAO,EAAEL,KAAK,CAACM;EACjB,CAAC,EAAEP,QAAQ,GAAG,eAAgBb,KAAK,CAACkB,aAAa,CAACjB,QAAQ,EAAE,IAAI,CAAC,GAAG,eAAgBD,KAAK,CAACkB,aAAa,CAAChB,WAAW,EAAE,IAAI,CAAC,EAAE,eAAgBF,KAAK,CAACkB,aAAa,CAACb,WAAW,EAAE,IAAI,CAAC,EAAEO,YAAY,GAAG,eAAgBZ,KAAK,CAACkB,aAAa,CAACf,aAAa,EAAE;IACpPkB,MAAM,EAAET;EACV,CAAC,EAAEK,SAAS,CAAC,GAAGA,SAAS,CAAC,CAAC;AAC7B,CAAC;AACD,SACET,cAAc"},"metadata":{},"sourceType":"module"}