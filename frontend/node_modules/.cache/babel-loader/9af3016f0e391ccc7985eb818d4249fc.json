{"ast":null,"code":"var _jsxFileName = \"/Users/davidhsieh/Code/react-flask-upload/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [fileURL, setfileURL] = useState(\"\");\n  const [filename, setfilename] = useState(\"\");\n\n  // get file name and file url\n  const handleFile = e => {\n    setfilename(e.target.files[0].name);\n    const reader = new FileReader();\n    reader.readAsDataURL(e.target.files[0]);\n    reader.onload = () => {\n      setfileURL(reader.result);\n    };\n  };\n  let uploadInput = null;\n  const handleUploadMultipleFiles = ev => {\n    ev.preventDefault();\n    const data = new FormData();\n    for (let i = 0; i < uploadInput.files.length; i++) {\n      data.append(\"file\", uploadInput.files[i]);\n      fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: data\n      }).then(response => {\n        response.json().then(body => {\n          console.log(body);\n          setfileURL(`http://localhost:5000/${body.filename}`);\n          alert(`File ${uploadInput.files[i].name} uploaded successfully. `);\n        });\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUploadMultipleFiles,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: ref => {\n            uploadInput = ref;\n          },\n          type: \"file\",\n          multiple: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"DkLLVETWb7yIGcFD0qrH5qPssxU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","fileURL","setfileURL","filename","setfilename","handleFile","e","target","files","name","reader","FileReader","readAsDataURL","onload","result","uploadInput","handleUploadMultipleFiles","ev","preventDefault","data","FormData","i","length","append","fetch","method","body","then","response","json","console","log","alert","ref"],"sources":["/Users/davidhsieh/Code/react-flask-upload/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [fileURL, setfileURL] = useState(\"\");\n  const [filename, setfilename] = useState(\"\");\n\n  // get file name and file url\n  const handleFile = (e) => {\n    setfilename(e.target.files[0].name);\n\n    const reader = new FileReader();\n    reader.readAsDataURL(e.target.files[0]);\n    reader.onload = () => {\n      setfileURL(reader.result);\n    };\n  };\n\n  let uploadInput = null;\n  const handleUploadMultipleFiles = (ev) => {\n    ev.preventDefault();\n\n    const data = new FormData();\n    for (let i = 0; i < uploadInput.files.length; i++) {\n      data.append(\"file\", uploadInput.files[i]);\n      fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: data,\n      }).then((response) => {\n        response.json().then((body) => {\n          console.log(body);\n          setfileURL(`http://localhost:5000/${body.filename}`);\n          alert(`File ${uploadInput.files[i].name} uploaded successfully. `);\n        });\n      });\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleUploadMultipleFiles}>\n        <div>\n          <input\n            ref={(ref) => {\n              uploadInput = ref;\n            }}\n            type=\"file\"\n            multiple\n          />\n        </div>\n        <br />\n        <div>\n          <button>Upload</button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAExC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMM,UAAU,GAAIC,CAAC,IAAK;IACxBF,WAAW,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;IAEnC,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC/BD,MAAM,CAACE,aAAa,CAACN,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACvCE,MAAM,CAACG,MAAM,GAAG,MAAM;MACpBX,UAAU,CAACQ,MAAM,CAACI,MAAM,CAAC;IAC3B,CAAC;EACH,CAAC;EAED,IAAIC,WAAW,GAAG,IAAI;EACtB,MAAMC,yBAAyB,GAAIC,EAAE,IAAK;IACxCA,EAAE,CAACC,cAAc,EAAE;IAEnB,MAAMC,IAAI,GAAG,IAAIC,QAAQ,EAAE;IAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,WAAW,CAACP,KAAK,CAACc,MAAM,EAAED,CAAC,EAAE,EAAE;MACjDF,IAAI,CAACI,MAAM,CAAC,MAAM,EAAER,WAAW,CAACP,KAAK,CAACa,CAAC,CAAC,CAAC;MACzCG,KAAK,CAAC,8BAA8B,EAAE;QACpCC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEP;MACR,CAAC,CAAC,CAACQ,IAAI,CAAEC,QAAQ,IAAK;QACpBA,QAAQ,CAACC,IAAI,EAAE,CAACF,IAAI,CAAED,IAAI,IAAK;UAC7BI,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;UACjBxB,UAAU,CAAE,yBAAwBwB,IAAI,CAACvB,QAAS,EAAC,CAAC;UACpD6B,KAAK,CAAE,QAAOjB,WAAW,CAACP,KAAK,CAACa,CAAC,CAAC,CAACZ,IAAK,0BAAyB,CAAC;QACpE,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACE;IAAA,uBACE;MAAM,QAAQ,EAAEO,yBAA0B;MAAA,wBACxC;QAAA,uBACE;UACE,GAAG,EAAGiB,GAAG,IAAK;YACZlB,WAAW,GAAGkB,GAAG;UACnB,CAAE;UACF,IAAI,EAAC,MAAM;UACX,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA;MACR;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAuB;QAAA;QAAA;QAAA;MAAA,QACnB;IAAA;MAAA;MAAA;MAAA;IAAA;EACD,iBACN;AAEP;AAAC,GAtDQjC,GAAG;AAAA,KAAHA,GAAG;AAwDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}