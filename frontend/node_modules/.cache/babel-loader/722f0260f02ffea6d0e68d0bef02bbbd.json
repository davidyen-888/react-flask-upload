{"ast":null,"code":"import sync from 'framesync';\nimport { useEffect } from 'react';\nimport { useInstantLayoutTransition } from '../projection/use-instant-layout-transition.mjs';\nimport { useForceUpdate } from './use-force-update.mjs';\nimport { instantAnimationState } from './use-instant-transition-state.mjs';\nfunction useInstantTransition() {\n  const [forceUpdate, forcedRenderCount] = useForceUpdate();\n  const startInstantLayoutTransition = useInstantLayoutTransition();\n  useEffect(() => {\n    /**\n     * Unblock after two animation frames, otherwise this will unblock too soon.\n     */\n    sync.postRender(() => sync.postRender(() => instantAnimationState.current = false));\n  }, [forcedRenderCount]);\n  return callback => {\n    startInstantLayoutTransition(() => {\n      instantAnimationState.current = true;\n      forceUpdate();\n      callback();\n    });\n  };\n}\nexport { useInstantTransition };","map":{"version":3,"names":["sync","useEffect","useInstantLayoutTransition","useForceUpdate","instantAnimationState","useInstantTransition","forceUpdate","forcedRenderCount","startInstantLayoutTransition","postRender","current","callback"],"sources":["/Users/davidhsieh/Code/react-flask-upload/frontend/node_modules/framer-motion/dist/es/utils/use-instant-transition.mjs"],"sourcesContent":["import sync from 'framesync';\nimport { useEffect } from 'react';\nimport { useInstantLayoutTransition } from '../projection/use-instant-layout-transition.mjs';\nimport { useForceUpdate } from './use-force-update.mjs';\nimport { instantAnimationState } from './use-instant-transition-state.mjs';\n\nfunction useInstantTransition() {\n    const [forceUpdate, forcedRenderCount] = useForceUpdate();\n    const startInstantLayoutTransition = useInstantLayoutTransition();\n    useEffect(() => {\n        /**\n         * Unblock after two animation frames, otherwise this will unblock too soon.\n         */\n        sync.postRender(() => sync.postRender(() => (instantAnimationState.current = false)));\n    }, [forcedRenderCount]);\n    return (callback) => {\n        startInstantLayoutTransition(() => {\n            instantAnimationState.current = true;\n            forceUpdate();\n            callback();\n        });\n    };\n}\n\nexport { useInstantTransition };\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,WAAW;AAC5B,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,0BAA0B,QAAQ,iDAAiD;AAC5F,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,qBAAqB,QAAQ,oCAAoC;AAE1E,SAASC,oBAAoB,GAAG;EAC5B,MAAM,CAACC,WAAW,EAAEC,iBAAiB,CAAC,GAAGJ,cAAc,EAAE;EACzD,MAAMK,4BAA4B,GAAGN,0BAA0B,EAAE;EACjED,SAAS,CAAC,MAAM;IACZ;AACR;AACA;IACQD,IAAI,CAACS,UAAU,CAAC,MAAMT,IAAI,CAACS,UAAU,CAAC,MAAOL,qBAAqB,CAACM,OAAO,GAAG,KAAM,CAAC,CAAC;EACzF,CAAC,EAAE,CAACH,iBAAiB,CAAC,CAAC;EACvB,OAAQI,QAAQ,IAAK;IACjBH,4BAA4B,CAAC,MAAM;MAC/BJ,qBAAqB,CAACM,OAAO,GAAG,IAAI;MACpCJ,WAAW,EAAE;MACbK,QAAQ,EAAE;IACd,CAAC,CAAC;EACN,CAAC;AACL;AAEA,SAASN,oBAAoB"},"metadata":{},"sourceType":"module"}