{"ast":null,"code":"var _jsxFileName = \"/Users/davidhsieh/Code/react-flask-upload/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [, setfileURL] = useState(\"\");\n  const [selectedFile, setselectedFile] = useState(null);\n  const [filename, setfilename] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:5000/upload\").then(res => {\n      res.json().then(data => {\n        setfilename(data.filename);\n      });\n    });\n  }, []);\n  console.log(filename);\n  let uploadInput = /*#__PURE__*/React.createRef();\n\n  // Track selected file before the upload\n  const handleSelectFile = e => {\n    const data = [];\n    for (let i = 0; i < e.target.files.length; i++) {\n      data.push(e.target.files.item(i));\n    }\n    setselectedFile(data);\n  };\n\n  // Upload file to server\n  const handleUploadFile = ev => {\n    ev.preventDefault();\n    const data = new FormData();\n    // Append the file to the request body\n    for (let i = 0; i < uploadInput.files.length; i++) {\n      data.append(\"file\", uploadInput.files[i], uploadInput.files[i].name);\n      fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: data\n      }).then(response => {\n        response.json().then(body => {\n          console.log(body);\n          setfileURL(`http://localhost:5000/${body.filename}`);\n        });\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"React-Flask File Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"This is a simple file upload app, upload your files and you can see the saved files in the backend/app/Downloads folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleUploadFile,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"formInput\",\n          type: \"file\",\n          multiple: true,\n          ref: ref => {\n            uploadInput = ref;\n          },\n          onChange: handleSelectFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selectFile\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Selected file(s): \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), selectedFile && selectedFile.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: item.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 24\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"formButton\",\n          type: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"V2oO8VH3PxcHcx5OTTVqRuGJDPk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","App","setfileURL","selectedFile","setselectedFile","filename","setfilename","fetch","then","res","json","data","console","log","uploadInput","createRef","handleSelectFile","e","i","target","files","length","push","item","handleUploadFile","ev","preventDefault","FormData","append","name","method","body","response","ref","map","index"],"sources":["/Users/davidhsieh/Code/react-flask-upload/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [, setfileURL] = useState(\"\");\n  const [selectedFile, setselectedFile] = useState(null);\n  const [filename, setfilename] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/upload\").then((res) => {\n      res.json().then((data) => {\n        setfilename(data.filename);\n      });\n    });\n  }, []);\n\n  console.log(filename);\n\n  let uploadInput = React.createRef();\n\n  // Track selected file before the upload\n  const handleSelectFile = (e) => {\n    const data = [];\n    for (let i = 0; i < e.target.files.length; i++) {\n      data.push(e.target.files.item(i));\n    }\n    setselectedFile(data);\n  };\n\n  // Upload file to server\n  const handleUploadFile = (ev) => {\n    ev.preventDefault();\n\n    const data = new FormData();\n    // Append the file to the request body\n    for (let i = 0; i < uploadInput.files.length; i++) {\n      data.append(\"file\", uploadInput.files[i], uploadInput.files[i].name);\n      fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: data,\n      }).then((response) => {\n        response.json().then((body) => {\n          console.log(body);\n          setfileURL(`http://localhost:5000/${body.filename}`);\n        });\n      });\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1>React-Flask File Upload</h1>\n        <h3>\n          This is a simple file upload app, upload your files and you can see\n          the saved files in the backend/app/Downloads folder\n        </h3>\n        <form className=\"form\" onSubmit={handleUploadFile}>\n          <input\n            className=\"formInput\"\n            type=\"file\"\n            multiple\n            ref={(ref) => {\n              uploadInput = ref;\n            }}\n            onChange={handleSelectFile}\n          />\n          <div className=\"selectFile\">\n            <h3>Selected file(s): </h3>\n            {selectedFile &&\n              selectedFile.map((item, index) => {\n                return <div key={index}>{item.name}</div>;\n              })}\n          </div>\n          <button className=\"formButton\" type=\"submit\">\n            Upload\n          </button>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}