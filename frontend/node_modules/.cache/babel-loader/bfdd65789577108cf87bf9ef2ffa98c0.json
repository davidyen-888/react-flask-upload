{"ast":null,"code":"var _jsxFileName = \"/Users/davidhsieh/Code/react-flask-upload/frontend/src/components/Uploaded.js\",\n  _s = $RefreshSig$();\n// This is the component to render the lists of uploaded files\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Uploaded() {\n  _s();\n  const [files, setfiles] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/upload\").then(res => res.json()).then(data => {\n      setfiles(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Uploaded Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: file.url,\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, file.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Uploaded, \"mDwksKeOujCClAanhp/dCFVe77E=\");\n_c = Uploaded;\nexport default Uploaded;\nvar _c;\n$RefreshReg$(_c, \"Uploaded\");","map":{"version":3,"names":["React","useState","useEffect","Uploaded","files","setfiles","fetch","then","res","json","data","map","file","url","name","id"],"sources":["/Users/davidhsieh/Code/react-flask-upload/frontend/src/components/Uploaded.js"],"sourcesContent":["// This is the component to render the lists of uploaded files\n\nimport React, { useState, useEffect } from \"react\";\n\nfunction Uploaded() {\n  const [files, setfiles] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/upload\")\n      .then((res) => res.json())\n      .then((data) => {\n        setfiles(data);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h1>Uploaded Files</h1>\n      <ul>\n        {files.map((file) => (\n          <li key={file.id}>\n            <a href={file.url}>{file.name}</a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Uploaded;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,SAASC,QAAQ,GAAG;EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdI,KAAK,CAAC,8BAA8B,CAAC,CAClCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdL,QAAQ,CAACK,IAAI,CAAC;IAChB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,eACvB;MAAA,UACGN,KAAK,CAACO,GAAG,CAAEC,IAAI,iBACd;QAAA,uBACE;UAAG,IAAI,EAAEA,IAAI,CAACC,GAAI;UAAA,UAAED,IAAI,CAACE;QAAI;UAAA;UAAA;UAAA;QAAA;MAAK,GAD3BF,IAAI,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAGjB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GAvBQZ,QAAQ;AAAA,KAARA,QAAQ;AAyBjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}