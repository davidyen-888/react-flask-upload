{"ast":null,"code":"import { __rest } from 'tslib';\nimport { detectAnimationFromOptions } from './utils/detect-animation-from-options.mjs';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../utils/interpolate.mjs';\nimport { hasRepeatDelayElapsed, reverseElapsed, loopElapsed } from './utils/elapsed.mjs';\nconst framesync = update => {\n  const passTimestamp = _ref => {\n    let {\n      delta\n    } = _ref;\n    return update(delta);\n  };\n  return {\n    start: () => sync.update(passTimestamp, true),\n    stop: () => cancelSync.update(passTimestamp)\n  };\n};\nfunction animate(_a) {\n  var _b, _c;\n  var {\n      from,\n      autoplay = true,\n      driver = framesync,\n      elapsed = 0,\n      repeat: repeatMax = 0,\n      repeatType = \"loop\",\n      repeatDelay = 0,\n      onPlay,\n      onStop,\n      onComplete,\n      onRepeat,\n      onUpdate\n    } = _a,\n    options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n  let {\n    to\n  } = options;\n  let driverControls;\n  let repeatCount = 0;\n  let computedDuration = options.duration;\n  let latest;\n  let isComplete = false;\n  let isForwardPlayback = true;\n  let interpolateFromNumber;\n  const animator = detectAnimationFromOptions(options);\n  if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n    interpolateFromNumber = interpolate([0, 100], [from, to], {\n      clamp: false\n    });\n    from = 0;\n    to = 100;\n  }\n  const animation = animator(Object.assign(Object.assign({}, options), {\n    from,\n    to\n  }));\n  function repeat() {\n    repeatCount++;\n    if (repeatType === \"reverse\") {\n      isForwardPlayback = repeatCount % 2 === 0;\n      elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n    } else {\n      elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n      if (repeatType === \"mirror\") animation.flipTarget();\n    }\n    isComplete = false;\n    onRepeat && onRepeat();\n  }\n  function complete() {\n    driverControls.stop();\n    onComplete && onComplete();\n  }\n  function update(delta) {\n    if (!isForwardPlayback) delta = -delta;\n    elapsed += delta;\n    if (!isComplete) {\n      const state = animation.next(Math.max(0, elapsed));\n      latest = state.value;\n      if (interpolateFromNumber) latest = interpolateFromNumber(latest);\n      isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n    }\n    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n    if (isComplete) {\n      if (repeatCount === 0) computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;\n      if (repeatCount < repeatMax) {\n        hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n      } else {\n        complete();\n      }\n    }\n  }\n  function play() {\n    onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n    driverControls = driver(update);\n    driverControls.start();\n  }\n  autoplay && play();\n  return {\n    stop: () => {\n      onStop === null || onStop === void 0 ? void 0 : onStop();\n      driverControls.stop();\n    }\n  };\n}\nexport { animate };","map":{"version":3,"names":["__rest","detectAnimationFromOptions","sync","cancelSync","interpolate","hasRepeatDelayElapsed","reverseElapsed","loopElapsed","framesync","update","passTimestamp","delta","start","stop","animate","_a","_b","_c","from","autoplay","driver","elapsed","repeat","repeatMax","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","options","to","driverControls","repeatCount","computedDuration","duration","latest","isComplete","isForwardPlayback","interpolateFromNumber","animator","needsInterpolation","call","clamp","animation","Object","assign","flipTarget","complete","state","next","Math","max","value","done","play"],"sources":["/Users/davidhsieh/Code/react-flask-upload/frontend/node_modules/popmotion/dist/es/animations/index.mjs"],"sourcesContent":["import { __rest } from 'tslib';\nimport { detectAnimationFromOptions } from './utils/detect-animation-from-options.mjs';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../utils/interpolate.mjs';\nimport { hasRepeatDelayElapsed, reverseElapsed, loopElapsed } from './utils/elapsed.mjs';\n\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate(_a) {\n    var _b, _c;\n    var { from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate } = _a, options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n    let { to } = options;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = options.duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = detectAnimationFromOptions(options);\n    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    const animation = animator(Object.assign(Object.assign({}, options), { from, to }));\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}