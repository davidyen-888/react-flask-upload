{"ast":null,"code":"var _jsxFileName = \"/Users/davidhsieh/Code/react-flask-upload/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [fileURL, setfileURL] = useState(\"\");\n  const [filename, setfilename] = useState(\"\");\n\n  // const handleUploadFile = (ev) => {\n  //   ev.preventDefault();\n\n  //   const data = new FormData();\n  //   data.append(\"file\", uploadInput.files[0]);\n\n  //   fetch(\"http://localhost:5000/upload\", {\n  //     method: \"POST\",\n  //     body: data,\n  //   }).then((response) => {\n  //     response.json().then((body) => {\n  //       console.log(body);\n  //       setfileURL(`http://localhost:5000/${body.filename}`);\n  //       alert(\n  //         `File ${body.filename} uploaded successfully to Downloads folder`\n  //       );\n  //     });\n  //   });\n  // };\n\n  let uploadInput;\n  const handleUploadMultipleFiles = ev => {\n    ev.preventDefault();\n    const data = new FormData();\n    for (let i = 0; i < uploadInput.files.length; i++) {\n      data.append(\"file\", uploadInput.files[i]);\n    }\n    fetch(\"http://localhost:5000/upload\", {\n      method: \"POST\",\n      body: data\n    }).then(response => {\n      response.json().then(body => {\n        console.log(body);\n        setfileURL(`http://localhost:5000/${body.filename}`);\n        // alert(\n        //   `File ${body.filename} uploaded successfully to Downloads folder`\n        // );\n      });\n    });\n  };\n\n  // get the file path\n  const getFilePath = ev => {\n    ev.preventDefault();\n    fetch(\"http://localhost:5000/getFilePath\", {\n      method: \"GET\"\n    }).then(response => {\n      response.json().then(body => {\n        console.log(body);\n        setfilename(body.filename);\n        alert(`File ${body.filename} is in Downloads folder`);\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUploadMultipleFiles,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: ref => {\n            uploadInput = ref;\n          },\n          type: \"file\",\n          multiple: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: uploadInput && uploadInput.files && Object.keys(uploadInput.files).map(key => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: uploadInput.files[key].name\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"DkLLVETWb7yIGcFD0qrH5qPssxU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","fileURL","setfileURL","filename","setfilename","uploadInput","handleUploadMultipleFiles","ev","preventDefault","data","FormData","i","files","length","append","fetch","method","body","then","response","json","console","log","getFilePath","alert","ref","Object","keys","map","key","name"],"sources":["/Users/davidhsieh/Code/react-flask-upload/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [fileURL, setfileURL] = useState(\"\");\n  const [filename, setfilename] = useState(\"\");\n\n  // const handleUploadFile = (ev) => {\n  //   ev.preventDefault();\n\n  //   const data = new FormData();\n  //   data.append(\"file\", uploadInput.files[0]);\n\n  //   fetch(\"http://localhost:5000/upload\", {\n  //     method: \"POST\",\n  //     body: data,\n  //   }).then((response) => {\n  //     response.json().then((body) => {\n  //       console.log(body);\n  //       setfileURL(`http://localhost:5000/${body.filename}`);\n  //       alert(\n  //         `File ${body.filename} uploaded successfully to Downloads folder`\n  //       );\n  //     });\n  //   });\n  // };\n\n  let uploadInput;\n  const handleUploadMultipleFiles = (ev) => {\n    ev.preventDefault();\n\n    const data = new FormData();\n    for (let i = 0; i < uploadInput.files.length; i++) {\n      data.append(\"file\", uploadInput.files[i]);\n    }\n\n    fetch(\"http://localhost:5000/upload\", {\n      method: \"POST\",\n      body: data,\n    }).then((response) => {\n      response.json().then((body) => {\n        console.log(body);\n        setfileURL(`http://localhost:5000/${body.filename}`);\n        // alert(\n        //   `File ${body.filename} uploaded successfully to Downloads folder`\n        // );\n      });\n    });\n  };\n\n  // get the file path\n  const getFilePath = (ev) => {\n    ev.preventDefault();\n\n    fetch(\"http://localhost:5000/getFilePath\", {\n      method: \"GET\",\n    }).then((response) => {\n      response.json().then((body) => {\n        console.log(body);\n        setfilename(body.filename);\n        alert(`File ${body.filename} is in Downloads folder`);\n      });\n    });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleUploadMultipleFiles}>\n        <div>\n          <input\n            ref={(ref) => {\n              uploadInput = ref;\n            }}\n            type=\"file\"\n            multiple\n          />\n        </div>\n        {/* Show the current selected file path in list */}\n        <h3>Selected files:</h3>\n        <ul>\n          {uploadInput &&\n            uploadInput.files &&\n            Object.keys(uploadInput.files).map((key) => (\n              <li key={key}>{uploadInput.files[key].name}</li>\n            ))}\n        </ul>\n        <br />\n        <div>\n          <button>Upload</button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAExC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIM,WAAW;EACf,MAAMC,yBAAyB,GAAIC,EAAE,IAAK;IACxCA,EAAE,CAACC,cAAc,EAAE;IAEnB,MAAMC,IAAI,GAAG,IAAIC,QAAQ,EAAE;IAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,WAAW,CAACO,KAAK,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MACjDF,IAAI,CAACK,MAAM,CAAC,MAAM,EAAET,WAAW,CAACO,KAAK,CAACD,CAAC,CAAC,CAAC;IAC3C;IAEAI,KAAK,CAAC,8BAA8B,EAAE;MACpCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAER;IACR,CAAC,CAAC,CAACS,IAAI,CAAEC,QAAQ,IAAK;MACpBA,QAAQ,CAACC,IAAI,EAAE,CAACF,IAAI,CAAED,IAAI,IAAK;QAC7BI,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;QACjBf,UAAU,CAAE,yBAAwBe,IAAI,CAACd,QAAS,EAAC,CAAC;QACpD;QACA;QACA;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMoB,WAAW,GAAIhB,EAAE,IAAK;IAC1BA,EAAE,CAACC,cAAc,EAAE;IAEnBO,KAAK,CAAC,mCAAmC,EAAE;MACzCC,MAAM,EAAE;IACV,CAAC,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;MACpBA,QAAQ,CAACC,IAAI,EAAE,CAACF,IAAI,CAAED,IAAI,IAAK;QAC7BI,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;QACjBb,WAAW,CAACa,IAAI,CAACd,QAAQ,CAAC;QAC1BqB,KAAK,CAAE,QAAOP,IAAI,CAACd,QAAS,yBAAwB,CAAC;MACvD,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAED,oBACE;IAAA,uBACE;MAAM,QAAQ,EAAEG,yBAA0B;MAAA,wBACxC;QAAA,uBACE;UACE,GAAG,EAAGmB,GAAG,IAAK;YACZpB,WAAW,GAAGoB,GAAG;UACnB,CAAE;UACF,IAAI,EAAC,MAAM;UACX,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA;MACR;QAAA;QAAA;QAAA;MAAA,QACE,eAEN;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAwB,eACxB;QAAA,UACGpB,WAAW,IACVA,WAAW,CAACO,KAAK,IACjBc,MAAM,CAACC,IAAI,CAACtB,WAAW,CAACO,KAAK,CAAC,CAACgB,GAAG,CAAEC,GAAG,iBACrC;UAAA,UAAexB,WAAW,CAACO,KAAK,CAACiB,GAAG,CAAC,CAACC;QAAI,GAAjCD,GAAG;UAAA;UAAA;UAAA;QAAA,QACb;MAAC;QAAA;QAAA;QAAA;MAAA,QACD,eACL;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAuB;QAAA;QAAA;QAAA;MAAA,QACnB;IAAA;MAAA;MAAA;MAAA;IAAA;EACD,iBACN;AAEP;AAAC,GA1FQ7B,GAAG;AAAA,KAAHA,GAAG;AA4FZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}