{"ast":null,"code":"var _jsxFileName = \"/Users/davidhsieh/Code/react-flask-upload/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [fileURL, setfileURL] = useState(\"\");\n  const [selectedFile, setselectedFile] = useState(null);\n  const [fileName, setfileName] = useState(\"\");\n  let uploadInput = /*#__PURE__*/React.createRef();\n  const handleSelectFile = e => {\n    const data = [];\n    for (let i = 0; i < e.target.files.length; i++) {\n      data.push(e.target.files.item(i));\n    }\n    setselectedFile(data);\n  };\n  const handleUploadFile = ev => {\n    ev.preventDefault();\n    const data = new FormData();\n    for (let i = 0; i < uploadInput.files.length; i++) {\n      data.append(\"file\", uploadInput.files[i], uploadInput.files[i].name);\n      fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: data\n      }).then(response => {\n        response.json().then(body => {\n          console.log(body);\n          setfileURL(`http://localhost:5000/${body.filename}`);\n          setfileName(body.filename);\n        });\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"React-Flask File Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"This is a simple file upload app, upload your files and you can see the saved files in the backend/app/Downloads folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleUploadFile,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"formInput\",\n          type: \"file\",\n          multiple: true,\n          ref: ref => {\n            uploadInput = ref;\n          },\n          onChange: handleSelectFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selectFile\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Selected file(s): \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), selectedFile && selectedFile.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: item.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 24\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"formButton\",\n          type: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"i+0RQJSX9lpEPttZKvpaV0msntg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","fileURL","setfileURL","selectedFile","setselectedFile","fileName","setfileName","uploadInput","createRef","handleSelectFile","e","data","i","target","files","length","push","item","handleUploadFile","ev","preventDefault","FormData","append","name","fetch","method","body","then","response","json","console","log","filename","ref","map","index"],"sources":["/Users/davidhsieh/Code/react-flask-upload/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [fileURL, setfileURL] = useState(\"\");\n  const [selectedFile, setselectedFile] = useState(null);\n  const [fileName, setfileName] = useState(\"\");\n\n  let uploadInput = React.createRef();\n\n  const handleSelectFile = (e) => {\n    const data = [];\n    for (let i = 0; i < e.target.files.length; i++) {\n      data.push(e.target.files.item(i));\n    }\n    setselectedFile(data);\n  };\n\n  const handleUploadFile = (ev) => {\n    ev.preventDefault();\n\n    const data = new FormData();\n    for (let i = 0; i < uploadInput.files.length; i++) {\n      data.append(\"file\", uploadInput.files[i], uploadInput.files[i].name);\n      fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: data,\n      }).then((response) => {\n        response.json().then((body) => {\n          console.log(body);\n          setfileURL(`http://localhost:5000/${body.filename}`);\n          setfileName(body.filename);\n        });\n      });\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1>React-Flask File Upload</h1>\n        <h3>\n          This is a simple file upload app, upload your files and you can see\n          the saved files in the backend/app/Downloads folder\n        </h3>\n        <form className=\"form\" onSubmit={handleUploadFile}>\n          <input\n            className=\"formInput\"\n            type=\"file\"\n            multiple\n            ref={(ref) => {\n              uploadInput = ref;\n            }}\n            onChange={handleSelectFile}\n          />\n          <div className=\"selectFile\">\n            <h3>Selected file(s): </h3>\n            {selectedFile &&\n              selectedFile.map((item, index) => {\n                return <div key={index}>{item.name}</div>;\n              })}\n          </div>\n          <button className=\"formButton\" type=\"submit\">\n            Upload\n          </button>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC;AAAA;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,IAAIQ,WAAW,gBAAGT,KAAK,CAACU,SAAS,EAAE;EAEnC,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAG,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,CAAC,CAACG,MAAM,CAACC,KAAK,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;MAC9CD,IAAI,CAACK,IAAI,CAACN,CAAC,CAACG,MAAM,CAACC,KAAK,CAACG,IAAI,CAACL,CAAC,CAAC,CAAC;IACnC;IACAR,eAAe,CAACO,IAAI,CAAC;EACvB,CAAC;EAED,MAAMO,gBAAgB,GAAIC,EAAE,IAAK;IAC/BA,EAAE,CAACC,cAAc,EAAE;IAEnB,MAAMT,IAAI,GAAG,IAAIU,QAAQ,EAAE;IAC3B,KAAK,IAAIT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,WAAW,CAACO,KAAK,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;MACjDD,IAAI,CAACW,MAAM,CAAC,MAAM,EAAEf,WAAW,CAACO,KAAK,CAACF,CAAC,CAAC,EAAEL,WAAW,CAACO,KAAK,CAACF,CAAC,CAAC,CAACW,IAAI,CAAC;MACpEC,KAAK,CAAC,8BAA8B,EAAE;QACpCC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEf;MACR,CAAC,CAAC,CAACgB,IAAI,CAAEC,QAAQ,IAAK;QACpBA,QAAQ,CAACC,IAAI,EAAE,CAACF,IAAI,CAAED,IAAI,IAAK;UAC7BI,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;UACjBxB,UAAU,CAAE,yBAAwBwB,IAAI,CAACM,QAAS,EAAC,CAAC;UACpD1B,WAAW,CAACoB,IAAI,CAACM,QAAQ,CAAC;QAC5B,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgC,eAChC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGK,eACL;QAAM,SAAS,EAAC,MAAM;QAAC,QAAQ,EAAEd,gBAAiB;QAAA,wBAChD;UACE,SAAS,EAAC,WAAW;UACrB,IAAI,EAAC,MAAM;UACX,QAAQ;UACR,GAAG,EAAGe,GAAG,IAAK;YACZ1B,WAAW,GAAG0B,GAAG;UACnB,CAAE;UACF,QAAQ,EAAExB;QAAiB;UAAA;UAAA;UAAA;QAAA,QAC3B,eACF;UAAK,SAAS,EAAC,YAAY;UAAA,wBACzB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAA2B,EAC1BN,YAAY,IACXA,YAAY,CAAC+B,GAAG,CAAC,CAACjB,IAAI,EAAEkB,KAAK,KAAK;YAChC,oBAAO;cAAA,UAAkBlB,IAAI,CAACM;YAAI,GAAjBY,KAAK;cAAA;cAAA;cAAA;YAAA,QAAmB;UAC3C,CAAC,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QACA,eACN;UAAQ,SAAS,EAAC,YAAY;UAAC,IAAI,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAEnC;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;MAAA;MAAA;MAAA;IAAA;EACH,iBACL;AAEP;AAAC,GAlEQnC,GAAG;AAAA,KAAHA,GAAG;AAoEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}