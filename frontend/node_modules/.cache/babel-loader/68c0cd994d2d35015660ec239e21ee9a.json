{"ast":null,"code":"// ../../../react-shim.js\nimport React from \"react\";\n\n// src/skeleton.tsx\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\nimport { chakra, forwardRef, keyframes, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { usePrevious } from \"@chakra-ui/react-use-previous\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = function () {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n  return classNames.filter(Boolean).join(\" \");\n};\n\n// src/skeleton.tsx\nimport { useEffect, useRef } from \"react\";\nvar StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nvar useIsFirstRender = () => {\n  const isFirstRender = useRef(true);\n  useEffect(() => {\n    isFirstRender.current = false;\n  }, []);\n  return isFirstRender.current;\n};\nvar fade = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar startColor = \"var(--skeleton-start-color)\";\nvar endColor = \"var(--skeleton-end-color)\";\nvar bgFade = keyframes({\n  from: {\n    borderColor: startColor,\n    background: startColor\n  },\n  to: {\n    borderColor: endColor,\n    background: endColor\n  }\n});\nvar Skeleton = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Skeleton\", props);\n  const isFirstRender = useIsFirstRender();\n  const {\n    startColor: startColor2,\n    endColor: endColor2,\n    isLoaded,\n    fadeDuration,\n    speed,\n    className,\n    ...rest\n  } = omitThemingProps(props);\n  const wasPreviouslyLoaded = usePrevious(isLoaded);\n  const _className = cx(\"chakra-skeleton\", className);\n  if (isLoaded) {\n    const animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : `${fade} ${fadeDuration}s`;\n    return /* @__PURE__ */React.createElement(chakra.div, {\n      ref,\n      className: _className,\n      __css: {\n        animation\n      },\n      ...rest\n    });\n  }\n  return /* @__PURE__ */React.createElement(StyledSkeleton, {\n    ref,\n    className: _className,\n    ...rest,\n    __css: {\n      ...styles,\n      animation: `${speed}s linear infinite alternate ${bgFade}`\n    }\n  });\n});\nSkeleton.defaultProps = {\n  fadeDuration: 0.4,\n  speed: 0.8\n};\nSkeleton.displayName = \"Skeleton\";\nfunction range(count) {\n  return Array(count).fill(1).map((_, index) => index + 1);\n}\nvar defaultNoOfLines = 3;\nvar SkeletonText = props => {\n  const {\n    noOfLines = defaultNoOfLines,\n    spacing = \"0.5rem\",\n    skeletonHeight = \"0.5rem\",\n    className,\n    startColor: startColor2,\n    endColor: endColor2,\n    isLoaded,\n    fadeDuration,\n    speed,\n    children,\n    ...rest\n  } = props;\n  const noOfLinesValue = useBreakpointValue(typeof noOfLines === \"number\" ? [noOfLines] : noOfLines) || defaultNoOfLines;\n  const numbers = range(noOfLinesValue);\n  const getWidth = index => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n    return \"100%\";\n  };\n  const _className = cx(\"chakra-skeleton__group\", className);\n  return /* @__PURE__ */React.createElement(chakra.div, {\n    className: _className,\n    ...rest\n  }, numbers.map((number, index) => {\n    if (isLoaded && index > 0) {\n      return null;\n    }\n    const sizeProps = isLoaded ? null : {\n      mb: number === numbers.length ? \"0\" : spacing,\n      width: getWidth(number),\n      height: skeletonHeight\n    };\n    return /* @__PURE__ */React.createElement(Skeleton, {\n      key: numbers.length.toString() + number,\n      startColor: startColor2,\n      endColor: endColor2,\n      isLoaded,\n      fadeDuration,\n      speed,\n      ...sizeProps\n    }, index === 0 ? children : void 0);\n  }));\n};\nSkeletonText.displayName = \"SkeletonText\";\nvar SkeletonCircle = _ref => {\n  let {\n    size = \"2rem\",\n    ...rest\n  } = _ref;\n  return /* @__PURE__ */React.createElement(Skeleton, {\n    borderRadius: \"full\",\n    boxSize: size,\n    ...rest\n  });\n};\nSkeletonCircle.displayName = \"SkeletonCircle\";\nexport { Skeleton, SkeletonCircle, SkeletonText };","map":{"version":3,"names":["React","useBreakpointValue","chakra","forwardRef","keyframes","omitThemingProps","useStyleConfig","usePrevious","cx","classNames","filter","Boolean","join","useEffect","useRef","StyledSkeleton","baseStyle","boxShadow","backgroundClip","cursor","color","pointerEvents","userSelect","visibility","useIsFirstRender","isFirstRender","current","fade","from","opacity","to","startColor","endColor","bgFade","borderColor","background","Skeleton","props","ref","styles","startColor2","endColor2","isLoaded","fadeDuration","speed","className","rest","wasPreviouslyLoaded","_className","animation","createElement","div","__css","defaultProps","displayName","range","count","Array","fill","map","_","index","defaultNoOfLines","SkeletonText","noOfLines","spacing","skeletonHeight","children","noOfLinesValue","numbers","getWidth","length","number","sizeProps","mb","width","height","key","toString","SkeletonCircle","size","borderRadius","boxSize"],"sources":["/Users/davidhsieh/Code/react-flask-upload/frontend/node_modules/@chakra-ui/skeleton/dist/index.esm.js"],"sourcesContent":["// ../../../react-shim.js\nimport React from \"react\";\n\n// src/skeleton.tsx\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\nimport {\n  chakra,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { usePrevious } from \"@chakra-ui/react-use-previous\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\n\n// src/skeleton.tsx\nimport { useEffect, useRef } from \"react\";\nvar StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nvar useIsFirstRender = () => {\n  const isFirstRender = useRef(true);\n  useEffect(() => {\n    isFirstRender.current = false;\n  }, []);\n  return isFirstRender.current;\n};\nvar fade = keyframes({\n  from: { opacity: 0 },\n  to: { opacity: 1 }\n});\nvar startColor = \"var(--skeleton-start-color)\";\nvar endColor = \"var(--skeleton-end-color)\";\nvar bgFade = keyframes({\n  from: { borderColor: startColor, background: startColor },\n  to: { borderColor: endColor, background: endColor }\n});\nvar Skeleton = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Skeleton\", props);\n  const isFirstRender = useIsFirstRender();\n  const {\n    startColor: startColor2,\n    endColor: endColor2,\n    isLoaded,\n    fadeDuration,\n    speed,\n    className,\n    ...rest\n  } = omitThemingProps(props);\n  const wasPreviouslyLoaded = usePrevious(isLoaded);\n  const _className = cx(\"chakra-skeleton\", className);\n  if (isLoaded) {\n    const animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : `${fade} ${fadeDuration}s`;\n    return /* @__PURE__ */ React.createElement(chakra.div, {\n      ref,\n      className: _className,\n      __css: { animation },\n      ...rest\n    });\n  }\n  return /* @__PURE__ */ React.createElement(StyledSkeleton, {\n    ref,\n    className: _className,\n    ...rest,\n    __css: {\n      ...styles,\n      animation: `${speed}s linear infinite alternate ${bgFade}`\n    }\n  });\n});\nSkeleton.defaultProps = {\n  fadeDuration: 0.4,\n  speed: 0.8\n};\nSkeleton.displayName = \"Skeleton\";\nfunction range(count) {\n  return Array(count).fill(1).map((_, index) => index + 1);\n}\nvar defaultNoOfLines = 3;\nvar SkeletonText = (props) => {\n  const {\n    noOfLines = defaultNoOfLines,\n    spacing = \"0.5rem\",\n    skeletonHeight = \"0.5rem\",\n    className,\n    startColor: startColor2,\n    endColor: endColor2,\n    isLoaded,\n    fadeDuration,\n    speed,\n    children,\n    ...rest\n  } = props;\n  const noOfLinesValue = useBreakpointValue(typeof noOfLines === \"number\" ? [noOfLines] : noOfLines) || defaultNoOfLines;\n  const numbers = range(noOfLinesValue);\n  const getWidth = (index) => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n    return \"100%\";\n  };\n  const _className = cx(\"chakra-skeleton__group\", className);\n  return /* @__PURE__ */ React.createElement(chakra.div, {\n    className: _className,\n    ...rest\n  }, numbers.map((number, index) => {\n    if (isLoaded && index > 0) {\n      return null;\n    }\n    const sizeProps = isLoaded ? null : {\n      mb: number === numbers.length ? \"0\" : spacing,\n      width: getWidth(number),\n      height: skeletonHeight\n    };\n    return /* @__PURE__ */ React.createElement(Skeleton, {\n      key: numbers.length.toString() + number,\n      startColor: startColor2,\n      endColor: endColor2,\n      isLoaded,\n      fadeDuration,\n      speed,\n      ...sizeProps\n    }, index === 0 ? children : void 0);\n  }));\n};\nSkeletonText.displayName = \"SkeletonText\";\nvar SkeletonCircle = ({\n  size = \"2rem\",\n  ...rest\n}) => /* @__PURE__ */ React.createElement(Skeleton, {\n  borderRadius: \"full\",\n  boxSize: size,\n  ...rest\n});\nSkeletonCircle.displayName = \"SkeletonCircle\";\nexport {\n  Skeleton,\n  SkeletonCircle,\n  SkeletonText\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}