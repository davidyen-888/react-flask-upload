{"ast":null,"code":"import { isFunction, noopReturn } from '@motionone/utils';\nimport { updateScrollInfo } from './info.es.js';\nimport { resolveOffsets } from './offsets/index.es.js';\nfunction measure(container) {\n  let target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : container;\n  let info = arguments.length > 2 ? arguments[2] : undefined;\n  /**\n   * Find inset of target within scrollable container\n   */\n  info.x.targetOffset = 0;\n  info.y.targetOffset = 0;\n  if (target !== container) {\n    let node = target;\n    while (node && node != container) {\n      info.x.targetOffset += node.offsetLeft;\n      info.y.targetOffset += node.offsetTop;\n      node = node.offsetParent;\n    }\n  }\n  info.x.targetLength = target === container ? target.scrollWidth : target.clientWidth;\n  info.y.targetLength = target === container ? target.scrollHeight : target.clientHeight;\n  info.x.containerLength = container.clientWidth;\n  info.y.containerLength = container.clientHeight;\n}\nfunction createOnScrollHandler(element, onScroll, info) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const axis = options.axis || \"y\";\n  return {\n    measure: () => measure(element, options.target, info),\n    update: time => {\n      updateScrollInfo(element, info, time);\n      if (options.offset || options.target) {\n        resolveOffsets(element, info, options);\n      }\n    },\n    notify: isFunction(onScroll) ? () => onScroll(info) : scrubAnimation(onScroll, info[axis])\n  };\n}\nfunction scrubAnimation(controls, axisInfo) {\n  controls.pause();\n  controls.forEachNative((animation, _ref) => {\n    let {\n      easing\n    } = _ref;\n    var _a, _b;\n    if (animation.updateDuration) {\n      if (!easing) animation.easing = noopReturn;\n      animation.updateDuration(1);\n    } else {\n      const timingOptions = {\n        duration: 1000\n      };\n      if (!easing) timingOptions.easing = \"linear\";\n      (_b = (_a = animation.effect) === null || _a === void 0 ? void 0 : _a.updateTiming) === null || _b === void 0 ? void 0 : _b.call(_a, timingOptions);\n    }\n  });\n  return () => {\n    controls.currentTime = axisInfo.progress;\n  };\n}\nexport { createOnScrollHandler };","map":{"version":3,"names":["isFunction","noopReturn","updateScrollInfo","resolveOffsets","measure","container","target","info","x","targetOffset","y","node","offsetLeft","offsetTop","offsetParent","targetLength","scrollWidth","clientWidth","scrollHeight","clientHeight","containerLength","createOnScrollHandler","element","onScroll","options","axis","update","time","offset","notify","scrubAnimation","controls","axisInfo","pause","forEachNative","animation","easing","_a","_b","updateDuration","timingOptions","duration","effect","updateTiming","call","currentTime","progress"],"sources":["/Users/davidhsieh/Code/react-flask-upload/frontend/node_modules/@motionone/dom/dist/gestures/scroll/on-scroll-handler.es.js"],"sourcesContent":["import { isFunction, noopReturn } from '@motionone/utils';\nimport { updateScrollInfo } from './info.es.js';\nimport { resolveOffsets } from './offsets/index.es.js';\n\nfunction measure(container, target = container, info) {\n    /**\n     * Find inset of target within scrollable container\n     */\n    info.x.targetOffset = 0;\n    info.y.targetOffset = 0;\n    if (target !== container) {\n        let node = target;\n        while (node && node != container) {\n            info.x.targetOffset += node.offsetLeft;\n            info.y.targetOffset += node.offsetTop;\n            node = node.offsetParent;\n        }\n    }\n    info.x.targetLength =\n        target === container ? target.scrollWidth : target.clientWidth;\n    info.y.targetLength =\n        target === container ? target.scrollHeight : target.clientHeight;\n    info.x.containerLength = container.clientWidth;\n    info.y.containerLength = container.clientHeight;\n}\nfunction createOnScrollHandler(element, onScroll, info, options = {}) {\n    const axis = options.axis || \"y\";\n    return {\n        measure: () => measure(element, options.target, info),\n        update: (time) => {\n            updateScrollInfo(element, info, time);\n            if (options.offset || options.target) {\n                resolveOffsets(element, info, options);\n            }\n        },\n        notify: isFunction(onScroll)\n            ? () => onScroll(info)\n            : scrubAnimation(onScroll, info[axis]),\n    };\n}\nfunction scrubAnimation(controls, axisInfo) {\n    controls.pause();\n    controls.forEachNative((animation, { easing }) => {\n        var _a, _b;\n        if (animation.updateDuration) {\n            if (!easing)\n                animation.easing = noopReturn;\n            animation.updateDuration(1);\n        }\n        else {\n            const timingOptions = { duration: 1000 };\n            if (!easing)\n                timingOptions.easing = \"linear\";\n            (_b = (_a = animation.effect) === null || _a === void 0 ? void 0 : _a.updateTiming) === null || _b === void 0 ? void 0 : _b.call(_a, timingOptions);\n        }\n    });\n    return () => {\n        controls.currentTime = axisInfo.progress;\n    };\n}\n\nexport { createOnScrollHandler };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}