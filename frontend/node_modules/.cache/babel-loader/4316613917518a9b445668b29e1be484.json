{"ast":null,"code":"import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\nconst colorToken = '${c}';\nconst numberToken = '${n}';\nfunction test(v) {\n  var _a, _b, _c, _d;\n  return isNaN(v) && isString(v) && ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0;\n}\nfunction analyse(v) {\n  if (typeof v === 'number') v = `${v}`;\n  const values = [];\n  let numColors = 0;\n  const colors = v.match(colorRegex);\n  if (colors) {\n    numColors = colors.length;\n    v = v.replace(colorRegex, colorToken);\n    values.push(...colors.map(color.parse));\n  }\n  const numbers = v.match(floatRegex);\n  if (numbers) {\n    v = v.replace(floatRegex, numberToken);\n    values.push(...numbers.map(number.parse));\n  }\n  return {\n    values,\n    numColors,\n    tokenised: v\n  };\n}\nfunction parse(v) {\n  return analyse(v).values;\n}\nfunction createTransformer(v) {\n  const {\n    values,\n    numColors,\n    tokenised\n  } = analyse(v);\n  const numValues = values.length;\n  return v => {\n    let output = tokenised;\n    for (let i = 0; i < numValues; i++) {\n      output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n    }\n    return output;\n  };\n}\nconst convertNumbersToZero = v => typeof v === 'number' ? 0 : v;\nfunction getAnimatableNone(v) {\n  const parsed = parse(v);\n  const transformer = createTransformer(v);\n  return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n  test,\n  parse,\n  createTransformer,\n  getAnimatableNone\n};\nexport { complex };","map":{"version":3,"names":["color","number","isString","floatRegex","colorRegex","sanitize","colorToken","numberToken","test","v","_a","_b","_c","_d","isNaN","match","length","analyse","values","numColors","colors","replace","push","map","parse","numbers","tokenised","createTransformer","numValues","output","i","transform","convertNumbersToZero","getAnimatableNone","parsed","transformer","complex"],"sources":["/Users/davidhsieh/Code/react-flask-upload/frontend/node_modules/style-value-types/dist/es/complex/index.mjs"],"sourcesContent":["import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = '${c}';\nconst numberToken = '${n}';\nfunction test(v) {\n    var _a, _b, _c, _d;\n    return (isNaN(v) &&\n        isString(v) &&\n        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);\n}\nfunction analyse(v) {\n    if (typeof v === 'number')\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, tokenised: v };\n}\nfunction parse(v) {\n    return analyse(v).values;\n}\nfunction createTransformer(v) {\n    const { values, numColors, tokenised } = analyse(v);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === 'number' ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { complex };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}