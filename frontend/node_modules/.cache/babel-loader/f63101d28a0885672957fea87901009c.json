{"ast":null,"code":"// src/use-pan-event.ts\nimport { addPointerEvent as addPointerEvent2 } from \"@chakra-ui/event-utils\";\nimport { useLatestRef } from \"@chakra-ui/react-use-latest-ref\";\nimport { useEffect, useRef } from \"react\";\n\n// src/pan-event.ts\nimport { addPointerEvent, getEventPoint, isMultiTouchEvent } from \"@chakra-ui/event-utils\";\nimport sync, { cancelSync, getFrameData } from \"framesync\";\nvar PanEvent = class {\n  history = [];\n  startEvent = null;\n  lastEvent = null;\n  lastEventInfo = null;\n  handlers = {};\n  removeListeners = () => {};\n  threshold = 3;\n  win;\n  constructor(event, handlers, threshold) {\n    this.win = event.view ?? window;\n    if (isMultiTouchEvent(event)) return;\n    this.handlers = handlers;\n    if (threshold) {\n      this.threshold = threshold;\n    }\n    event.stopPropagation();\n    event.preventDefault();\n    const info = {\n      point: getEventPoint(event)\n    };\n    const {\n      timestamp\n    } = getFrameData();\n    this.history = [{\n      ...info.point,\n      timestamp\n    }];\n    const {\n      onSessionStart\n    } = handlers;\n    onSessionStart == null ? void 0 : onSessionStart(event, getPanInfo(info, this.history));\n    this.removeListeners = pipe(addPointerEvent(this.win, \"pointermove\", this.onPointerMove), addPointerEvent(this.win, \"pointerup\", this.onPointerUp), addPointerEvent(this.win, \"pointercancel\", this.onPointerUp));\n  }\n  updatePoint = () => {\n    if (!(this.lastEvent && this.lastEventInfo)) return;\n    const info = getPanInfo(this.lastEventInfo, this.history);\n    const isPanStarted = this.startEvent !== null;\n    const isDistancePastThreshold = distance(info.offset, {\n      x: 0,\n      y: 0\n    }) >= this.threshold;\n    if (!isPanStarted && !isDistancePastThreshold) return;\n    const {\n      timestamp\n    } = getFrameData();\n    this.history.push({\n      ...info.point,\n      timestamp\n    });\n    const {\n      onStart,\n      onMove\n    } = this.handlers;\n    if (!isPanStarted) {\n      onStart == null ? void 0 : onStart(this.lastEvent, info);\n      this.startEvent = this.lastEvent;\n    }\n    onMove == null ? void 0 : onMove(this.lastEvent, info);\n  };\n  onPointerMove = (event, info) => {\n    this.lastEvent = event;\n    this.lastEventInfo = info;\n    sync.update(this.updatePoint, true);\n  };\n  onPointerUp = (event, info) => {\n    const panInfo = getPanInfo(info, this.history);\n    const {\n      onEnd,\n      onSessionEnd\n    } = this.handlers;\n    onSessionEnd == null ? void 0 : onSessionEnd(event, panInfo);\n    this.end();\n    if (!onEnd || !this.startEvent) return;\n    onEnd == null ? void 0 : onEnd(event, panInfo);\n  };\n  updateHandlers(handlers) {\n    this.handlers = handlers;\n  }\n  end() {\n    var _a;\n    (_a = this.removeListeners) == null ? void 0 : _a.call(this);\n    cancelSync.update(this.updatePoint);\n  }\n};\nfunction subtract(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\nfunction getPanInfo(info, history) {\n  return {\n    point: info.point,\n    delta: subtract(info.point, history[history.length - 1]),\n    offset: subtract(info.point, history[0]),\n    velocity: getVelocity(history, 0.1)\n  };\n}\nvar toMilliseconds = v => v * 1e3;\nfunction getVelocity(history, timeDelta) {\n  if (history.length < 2) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  let i = history.length - 1;\n  let timestampedPoint = null;\n  const lastPoint = history[history.length - 1];\n  while (i >= 0) {\n    timestampedPoint = history[i];\n    if (lastPoint.timestamp - timestampedPoint.timestamp > toMilliseconds(timeDelta)) {\n      break;\n    }\n    i--;\n  }\n  if (!timestampedPoint) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1e3;\n  if (time === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  const currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n  return currentVelocity;\n}\nfunction pipe() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n  return v => fns.reduce((a, b) => b(a), v);\n}\nfunction distance1D(a, b) {\n  return Math.abs(a - b);\n}\nfunction isPoint(point) {\n  return \"x\" in point && \"y\" in point;\n}\nfunction distance(a, b) {\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return distance1D(a, b);\n  }\n  if (isPoint(a) && isPoint(b)) {\n    const xDelta = distance1D(a.x, b.x);\n    const yDelta = distance1D(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n  }\n  return 0;\n}\n\n// src/use-pan-event.ts\nfunction usePanEvent(ref, options) {\n  const {\n    onPan,\n    onPanStart,\n    onPanEnd,\n    onPanSessionStart,\n    onPanSessionEnd,\n    threshold\n  } = options;\n  const hasPanEvents = Boolean(onPan || onPanStart || onPanEnd || onPanSessionStart || onPanSessionEnd);\n  const panSession = useRef(null);\n  const handlersRef = useLatestRef({\n    onSessionStart: onPanSessionStart,\n    onSessionEnd: onPanSessionEnd,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd(event, info) {\n      panSession.current = null;\n      onPanEnd == null ? void 0 : onPanEnd(event, info);\n    }\n  });\n  useEffect(() => {\n    var _a;\n    (_a = panSession.current) == null ? void 0 : _a.updateHandlers(handlersRef.current);\n  });\n  useEffect(() => {\n    const node = ref.current;\n    if (!node || !hasPanEvents) return;\n    function onPointerDown(event) {\n      panSession.current = new PanEvent(event, handlersRef.current, threshold);\n    }\n    return addPointerEvent2(node, \"pointerdown\", onPointerDown);\n  }, [ref, hasPanEvents, handlersRef, threshold]);\n  useEffect(() => {\n    return () => {\n      var _a;\n      (_a = panSession.current) == null ? void 0 : _a.end();\n      panSession.current = null;\n    };\n  }, []);\n}\nexport { usePanEvent };","map":{"version":3,"names":["addPointerEvent","addPointerEvent2","useLatestRef","useEffect","useRef","getEventPoint","isMultiTouchEvent","sync","cancelSync","getFrameData","PanEvent","history","startEvent","lastEvent","lastEventInfo","handlers","removeListeners","threshold","win","constructor","event","view","window","stopPropagation","preventDefault","info","point","timestamp","onSessionStart","getPanInfo","pipe","onPointerMove","onPointerUp","updatePoint","isPanStarted","isDistancePastThreshold","distance","offset","x","y","push","onStart","onMove","update","panInfo","onEnd","onSessionEnd","end","updateHandlers","_a","call","subtract","a","b","delta","length","velocity","getVelocity","toMilliseconds","v","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity","fns","reduce","distance1D","Math","abs","isPoint","xDelta","yDelta","sqrt","usePanEvent","ref","options","onPan","onPanStart","onPanEnd","onPanSessionStart","onPanSessionEnd","hasPanEvents","Boolean","panSession","handlersRef","current","node","onPointerDown"],"sources":["/Users/davidhsieh/Code/react-flask-upload/frontend/node_modules/@chakra-ui/react-use-pan-event/dist/index.esm.js"],"sourcesContent":["// src/use-pan-event.ts\nimport { addPointerEvent as addPointerEvent2 } from \"@chakra-ui/event-utils\";\nimport { useLatestRef } from \"@chakra-ui/react-use-latest-ref\";\nimport { useEffect, useRef } from \"react\";\n\n// src/pan-event.ts\nimport {\n  addPointerEvent,\n  getEventPoint,\n  isMultiTouchEvent\n} from \"@chakra-ui/event-utils\";\nimport sync, { cancelSync, getFrameData } from \"framesync\";\nvar PanEvent = class {\n  history = [];\n  startEvent = null;\n  lastEvent = null;\n  lastEventInfo = null;\n  handlers = {};\n  removeListeners = () => {\n  };\n  threshold = 3;\n  win;\n  constructor(event, handlers, threshold) {\n    this.win = event.view ?? window;\n    if (isMultiTouchEvent(event))\n      return;\n    this.handlers = handlers;\n    if (threshold) {\n      this.threshold = threshold;\n    }\n    event.stopPropagation();\n    event.preventDefault();\n    const info = { point: getEventPoint(event) };\n    const { timestamp } = getFrameData();\n    this.history = [{ ...info.point, timestamp }];\n    const { onSessionStart } = handlers;\n    onSessionStart == null ? void 0 : onSessionStart(event, getPanInfo(info, this.history));\n    this.removeListeners = pipe(addPointerEvent(this.win, \"pointermove\", this.onPointerMove), addPointerEvent(this.win, \"pointerup\", this.onPointerUp), addPointerEvent(this.win, \"pointercancel\", this.onPointerUp));\n  }\n  updatePoint = () => {\n    if (!(this.lastEvent && this.lastEventInfo))\n      return;\n    const info = getPanInfo(this.lastEventInfo, this.history);\n    const isPanStarted = this.startEvent !== null;\n    const isDistancePastThreshold = distance(info.offset, { x: 0, y: 0 }) >= this.threshold;\n    if (!isPanStarted && !isDistancePastThreshold)\n      return;\n    const { timestamp } = getFrameData();\n    this.history.push({ ...info.point, timestamp });\n    const { onStart, onMove } = this.handlers;\n    if (!isPanStarted) {\n      onStart == null ? void 0 : onStart(this.lastEvent, info);\n      this.startEvent = this.lastEvent;\n    }\n    onMove == null ? void 0 : onMove(this.lastEvent, info);\n  };\n  onPointerMove = (event, info) => {\n    this.lastEvent = event;\n    this.lastEventInfo = info;\n    sync.update(this.updatePoint, true);\n  };\n  onPointerUp = (event, info) => {\n    const panInfo = getPanInfo(info, this.history);\n    const { onEnd, onSessionEnd } = this.handlers;\n    onSessionEnd == null ? void 0 : onSessionEnd(event, panInfo);\n    this.end();\n    if (!onEnd || !this.startEvent)\n      return;\n    onEnd == null ? void 0 : onEnd(event, panInfo);\n  };\n  updateHandlers(handlers) {\n    this.handlers = handlers;\n  }\n  end() {\n    var _a;\n    (_a = this.removeListeners) == null ? void 0 : _a.call(this);\n    cancelSync.update(this.updatePoint);\n  }\n};\nfunction subtract(a, b) {\n  return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo(info, history) {\n  return {\n    point: info.point,\n    delta: subtract(info.point, history[history.length - 1]),\n    offset: subtract(info.point, history[0]),\n    velocity: getVelocity(history, 0.1)\n  };\n}\nvar toMilliseconds = (v) => v * 1e3;\nfunction getVelocity(history, timeDelta) {\n  if (history.length < 2) {\n    return { x: 0, y: 0 };\n  }\n  let i = history.length - 1;\n  let timestampedPoint = null;\n  const lastPoint = history[history.length - 1];\n  while (i >= 0) {\n    timestampedPoint = history[i];\n    if (lastPoint.timestamp - timestampedPoint.timestamp > toMilliseconds(timeDelta)) {\n      break;\n    }\n    i--;\n  }\n  if (!timestampedPoint) {\n    return { x: 0, y: 0 };\n  }\n  const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1e3;\n  if (time === 0) {\n    return { x: 0, y: 0 };\n  }\n  const currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n  return currentVelocity;\n}\nfunction pipe(...fns) {\n  return (v) => fns.reduce((a, b) => b(a), v);\n}\nfunction distance1D(a, b) {\n  return Math.abs(a - b);\n}\nfunction isPoint(point) {\n  return \"x\" in point && \"y\" in point;\n}\nfunction distance(a, b) {\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return distance1D(a, b);\n  }\n  if (isPoint(a) && isPoint(b)) {\n    const xDelta = distance1D(a.x, b.x);\n    const yDelta = distance1D(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n  }\n  return 0;\n}\n\n// src/use-pan-event.ts\nfunction usePanEvent(ref, options) {\n  const {\n    onPan,\n    onPanStart,\n    onPanEnd,\n    onPanSessionStart,\n    onPanSessionEnd,\n    threshold\n  } = options;\n  const hasPanEvents = Boolean(onPan || onPanStart || onPanEnd || onPanSessionStart || onPanSessionEnd);\n  const panSession = useRef(null);\n  const handlersRef = useLatestRef({\n    onSessionStart: onPanSessionStart,\n    onSessionEnd: onPanSessionEnd,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd(event, info) {\n      panSession.current = null;\n      onPanEnd == null ? void 0 : onPanEnd(event, info);\n    }\n  });\n  useEffect(() => {\n    var _a;\n    (_a = panSession.current) == null ? void 0 : _a.updateHandlers(handlersRef.current);\n  });\n  useEffect(() => {\n    const node = ref.current;\n    if (!node || !hasPanEvents)\n      return;\n    function onPointerDown(event) {\n      panSession.current = new PanEvent(event, handlersRef.current, threshold);\n    }\n    return addPointerEvent2(node, \"pointerdown\", onPointerDown);\n  }, [ref, hasPanEvents, handlersRef, threshold]);\n  useEffect(() => {\n    return () => {\n      var _a;\n      (_a = panSession.current) == null ? void 0 : _a.end();\n      panSession.current = null;\n    };\n  }, []);\n}\nexport {\n  usePanEvent\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}